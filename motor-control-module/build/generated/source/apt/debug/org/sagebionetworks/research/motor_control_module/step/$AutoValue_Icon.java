

package org.sagebionetworks.research.motor_control_module.step;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

// Generated by com.google.auto.value.processor.AutoValueProcessor
abstract class $AutoValue_Icon extends Icon {

  private final String icon;

  private final String title;

  $AutoValue_Icon(
      String icon,
      @Nullable String title) {
    if (icon == null) {
      throw new NullPointerException("Null icon");
    }
    this.icon = icon;
    this.title = title;
  }

  @NonNull
  @Override
  public String getIcon() {
    return icon;
  }

  @Nullable
  @Override
  public String getTitle() {
    return title;
  }

  @Override
  public String toString() {
    return "Icon{"
         + "icon=" + icon + ", "
         + "title=" + title
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof Icon) {
      Icon that = (Icon) o;
      return this.icon.equals(that.getIcon())
          && (this.title == null ? that.getTitle() == null : this.title.equals(that.getTitle()));
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= icon.hashCode();
    h$ *= 1000003;
    h$ ^= (title == null) ? 0 : title.hashCode();
    return h$;
  }

  static final class Builder extends Icon.Builder {
    private String icon;
    private String title;
    Builder() {
    }
    @Override
    public Icon.Builder setIcon(String icon) {
      if (icon == null) {
        throw new NullPointerException("Null icon");
      }
      this.icon = icon;
      return this;
    }
    @Override
    public Icon.Builder setTitle(@Nullable String title) {
      this.title = title;
      return this;
    }
    @Override
    public Icon build() {
      String missing = "";
      if (this.icon == null) {
        missing += " icon";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_Icon(
          this.icon,
          this.title);
    }
  }

}
