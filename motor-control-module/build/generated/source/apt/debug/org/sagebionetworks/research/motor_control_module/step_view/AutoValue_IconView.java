

package org.sagebionetworks.research.motor_control_module.step_view;

import android.support.annotation.Nullable;
import org.sagebionetworks.research.presentation.DisplayDrawable;
import org.sagebionetworks.research.presentation.DisplayString;

// Generated by com.google.auto.value.processor.AutoValueProcessor
final class AutoValue_IconView extends IconView {

  private final DisplayDrawable icon;

  private final DisplayString title;

  private AutoValue_IconView(
      DisplayDrawable icon,
      DisplayString title) {
    this.icon = icon;
    this.title = title;
  }

  @Override
  public DisplayDrawable getIcon() {
    return icon;
  }

  @Override
  public DisplayString getTitle() {
    return title;
  }

  @Override
  public String toString() {
    return "IconView{"
         + "icon=" + icon + ", "
         + "title=" + title
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof IconView) {
      IconView that = (IconView) o;
      return this.icon.equals(that.getIcon())
          && this.title.equals(that.getTitle());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= icon.hashCode();
    h$ *= 1000003;
    h$ ^= title.hashCode();
    return h$;
  }

  static final class Builder extends IconView.Builder {
    private DisplayDrawable icon;
    private DisplayString title;
    Builder() {
    }
    @Override
    public IconView.Builder setIcon(@Nullable DisplayDrawable icon) {
      if (icon == null) {
        throw new NullPointerException("Null icon");
      }
      this.icon = icon;
      return this;
    }
    @Override
    public IconView.Builder setTitle(@Nullable DisplayString title) {
      if (title == null) {
        throw new NullPointerException("Null title");
      }
      this.title = title;
      return this;
    }
    @Override
    public IconView build() {
      String missing = "";
      if (this.icon == null) {
        missing += " icon";
      }
      if (this.title == null) {
        missing += " title";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_IconView(
          this.icon,
          this.title);
    }
  }

}
