// Generated by Dagger (https://google.github.io/dagger).
package org.sagebionetworks.research.motor_control_module.inject;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import org.sagebionetworks.research.presentation.model.interfaces.StepView;
import org.sagebionetworks.research.presentation.show_step.show_step_view_model_factories.ShowStepViewModelFactory;

public final class TappingStepModule_ProvideTappingStepVMFFactory
    implements Factory<ShowStepViewModelFactory<?, ? extends StepView>> {
  private static final TappingStepModule_ProvideTappingStepVMFFactory INSTANCE =
      new TappingStepModule_ProvideTappingStepVMFFactory();

  @Override
  public ShowStepViewModelFactory<?, ? extends StepView> get() {
    return proxyProvideTappingStepVMF();
  }

  public static TappingStepModule_ProvideTappingStepVMFFactory create() {
    return INSTANCE;
  }

  public static ShowStepViewModelFactory<?, ? extends StepView> proxyProvideTappingStepVMF() {
    return Preconditions.checkNotNull(
        TappingStepModule.provideTappingStepVMF(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
