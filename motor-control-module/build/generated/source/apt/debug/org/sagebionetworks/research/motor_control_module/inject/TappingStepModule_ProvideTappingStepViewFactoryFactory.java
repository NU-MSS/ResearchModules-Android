// Generated by Dagger (https://google.github.io/dagger).
package org.sagebionetworks.research.motor_control_module.inject;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import org.sagebionetworks.research.presentation.inject.StepViewModule;

public final class TappingStepModule_ProvideTappingStepViewFactoryFactory
    implements Factory<StepViewModule.InternalStepViewFactory> {
  private static final TappingStepModule_ProvideTappingStepViewFactoryFactory INSTANCE =
      new TappingStepModule_ProvideTappingStepViewFactoryFactory();

  @Override
  public StepViewModule.InternalStepViewFactory get() {
    return proxyProvideTappingStepViewFactory();
  }

  public static TappingStepModule_ProvideTappingStepViewFactoryFactory create() {
    return INSTANCE;
  }

  public static StepViewModule.InternalStepViewFactory proxyProvideTappingStepViewFactory() {
    return Preconditions.checkNotNull(
        TappingStepModule.provideTappingStepViewFactory(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
