

package org.sagebionetworks.research.motor_control_module.step;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableSet;
import com.google.gson.annotations.SerializedName;
import java.util.Map;
import java.util.Set;
import org.sagebionetworks.research.domain.async.AsyncActionConfiguration;
import org.sagebionetworks.research.domain.step.ui.action.Action;
import org.sagebionetworks.research.domain.step.ui.theme.ColorTheme;
import org.sagebionetworks.research.domain.step.ui.theme.ImageTheme;

// Generated by com.google.auto.value.processor.AutoValueProcessor
abstract class $AutoValue_TappingCompletionStep extends TappingCompletionStep {

  private final ImmutableSet<AsyncActionConfiguration> asyncActions;

  private final String identifier;

  private final ImmutableMap<String, Action> actions;

  private final ImmutableSet<String> hiddenActions;

  private final String detail;

  private final String footnote;

  private final String text;

  private final String title;

  private final ColorTheme colorTheme;

  private final ImageTheme imageTheme;

  $AutoValue_TappingCompletionStep(
      ImmutableSet<AsyncActionConfiguration> asyncActions,
      String identifier,
      ImmutableMap<String, Action> actions,
      ImmutableSet<String> hiddenActions,
      @Nullable String detail,
      @Nullable String footnote,
      @Nullable String text,
      @Nullable String title,
      @Nullable ColorTheme colorTheme,
      @Nullable ImageTheme imageTheme) {
    if (asyncActions == null) {
      throw new NullPointerException("Null asyncActions");
    }
    this.asyncActions = asyncActions;
    if (identifier == null) {
      throw new NullPointerException("Null identifier");
    }
    this.identifier = identifier;
    if (actions == null) {
      throw new NullPointerException("Null actions");
    }
    this.actions = actions;
    if (hiddenActions == null) {
      throw new NullPointerException("Null hiddenActions");
    }
    this.hiddenActions = hiddenActions;
    this.detail = detail;
    this.footnote = footnote;
    this.text = text;
    this.title = title;
    this.colorTheme = colorTheme;
    this.imageTheme = imageTheme;
  }

  @NonNull
  @Override
  public ImmutableSet<AsyncActionConfiguration> getAsyncActions() {
    return asyncActions;
  }

  @NonNull
  @Override
  public String getIdentifier() {
    return identifier;
  }

  @NonNull
  @Override
  public ImmutableMap<String, Action> getActions() {
    return actions;
  }

  @NonNull
  @Override
  public ImmutableSet<String> getHiddenActions() {
    return hiddenActions;
  }

  @Nullable
  @Override
  public String getDetail() {
    return detail;
  }

  @Nullable
  @Override
  public String getFootnote() {
    return footnote;
  }

  @Nullable
  @Override
  public String getText() {
    return text;
  }

  @Nullable
  @Override
  public String getTitle() {
    return title;
  }

  @Nullable
  @Override
  public ColorTheme getColorTheme() {
    return colorTheme;
  }

  @SerializedName(value = "image")
  @Nullable
  @Override
  public ImageTheme getImageTheme() {
    return imageTheme;
  }

  @Override
  public String toString() {
    return "TappingCompletionStep{"
         + "asyncActions=" + asyncActions + ", "
         + "identifier=" + identifier + ", "
         + "actions=" + actions + ", "
         + "hiddenActions=" + hiddenActions + ", "
         + "detail=" + detail + ", "
         + "footnote=" + footnote + ", "
         + "text=" + text + ", "
         + "title=" + title + ", "
         + "colorTheme=" + colorTheme + ", "
         + "imageTheme=" + imageTheme
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof TappingCompletionStep) {
      TappingCompletionStep that = (TappingCompletionStep) o;
      return this.asyncActions.equals(that.getAsyncActions())
          && this.identifier.equals(that.getIdentifier())
          && this.actions.equals(that.getActions())
          && this.hiddenActions.equals(that.getHiddenActions())
          && (this.detail == null ? that.getDetail() == null : this.detail.equals(that.getDetail()))
          && (this.footnote == null ? that.getFootnote() == null : this.footnote.equals(that.getFootnote()))
          && (this.text == null ? that.getText() == null : this.text.equals(that.getText()))
          && (this.title == null ? that.getTitle() == null : this.title.equals(that.getTitle()))
          && (this.colorTheme == null ? that.getColorTheme() == null : this.colorTheme.equals(that.getColorTheme()))
          && (this.imageTheme == null ? that.getImageTheme() == null : this.imageTheme.equals(that.getImageTheme()));
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= asyncActions.hashCode();
    h$ *= 1000003;
    h$ ^= identifier.hashCode();
    h$ *= 1000003;
    h$ ^= actions.hashCode();
    h$ *= 1000003;
    h$ ^= hiddenActions.hashCode();
    h$ *= 1000003;
    h$ ^= (detail == null) ? 0 : detail.hashCode();
    h$ *= 1000003;
    h$ ^= (footnote == null) ? 0 : footnote.hashCode();
    h$ *= 1000003;
    h$ ^= (text == null) ? 0 : text.hashCode();
    h$ *= 1000003;
    h$ ^= (title == null) ? 0 : title.hashCode();
    h$ *= 1000003;
    h$ ^= (colorTheme == null) ? 0 : colorTheme.hashCode();
    h$ *= 1000003;
    h$ ^= (imageTheme == null) ? 0 : imageTheme.hashCode();
    return h$;
  }

  @Override
  public TappingCompletionStep.Builder toBuilder() {
    return new Builder(this);
  }

  static final class Builder extends TappingCompletionStep.Builder {
    private ImmutableSet<AsyncActionConfiguration> asyncActions;
    private String identifier;
    private ImmutableMap<String, Action> actions;
    private ImmutableSet<String> hiddenActions;
    private String detail;
    private String footnote;
    private String text;
    private String title;
    private ColorTheme colorTheme;
    private ImageTheme imageTheme;
    Builder() {
    }
    private Builder(TappingCompletionStep source) {
      this.asyncActions = source.getAsyncActions();
      this.identifier = source.getIdentifier();
      this.actions = source.getActions();
      this.hiddenActions = source.getHiddenActions();
      this.detail = source.getDetail();
      this.footnote = source.getFootnote();
      this.text = source.getText();
      this.title = source.getTitle();
      this.colorTheme = source.getColorTheme();
      this.imageTheme = source.getImageTheme();
    }
    @Override
    public TappingCompletionStep.Builder setAsyncActions(Set<AsyncActionConfiguration> asyncActions) {
      this.asyncActions = ImmutableSet.copyOf(asyncActions);
      return this;
    }
    @Override
    public TappingCompletionStep.Builder setIdentifier(String identifier) {
      if (identifier == null) {
        throw new NullPointerException("Null identifier");
      }
      this.identifier = identifier;
      return this;
    }
    @Override
    public TappingCompletionStep.Builder setActions(Map<String, Action> actions) {
      this.actions = ImmutableMap.copyOf(actions);
      return this;
    }
    @Override
    public TappingCompletionStep.Builder setHiddenActions(Set<String> hiddenActions) {
      this.hiddenActions = ImmutableSet.copyOf(hiddenActions);
      return this;
    }
    @Override
    public TappingCompletionStep.Builder setDetail(@Nullable String detail) {
      this.detail = detail;
      return this;
    }
    @Override
    public TappingCompletionStep.Builder setFootnote(@Nullable String footnote) {
      this.footnote = footnote;
      return this;
    }
    @Override
    public TappingCompletionStep.Builder setText(@Nullable String text) {
      this.text = text;
      return this;
    }
    @Override
    public TappingCompletionStep.Builder setTitle(@Nullable String title) {
      this.title = title;
      return this;
    }
    @Override
    public TappingCompletionStep.Builder setColorTheme(@Nullable ColorTheme colorTheme) {
      this.colorTheme = colorTheme;
      return this;
    }
    @Override
    public TappingCompletionStep.Builder setImageTheme(@Nullable ImageTheme imageTheme) {
      this.imageTheme = imageTheme;
      return this;
    }
    @Override
    public TappingCompletionStep build() {
      String missing = "";
      if (this.asyncActions == null) {
        missing += " asyncActions";
      }
      if (this.identifier == null) {
        missing += " identifier";
      }
      if (this.actions == null) {
        missing += " actions";
      }
      if (this.hiddenActions == null) {
        missing += " hiddenActions";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_TappingCompletionStep(
          this.asyncActions,
          this.identifier,
          this.actions,
          this.hiddenActions,
          this.detail,
          this.footnote,
          this.text,
          this.title,
          this.colorTheme,
          this.imageTheme);
    }
  }

}
